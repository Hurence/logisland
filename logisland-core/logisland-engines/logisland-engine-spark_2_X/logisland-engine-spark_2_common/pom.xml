<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd
http://www.w3.org/2001/XMLSchema-instance ">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.hurence.logisland</groupId>
        <artifactId>logisland-engine-spark_2_X</artifactId>
        <version>1.4.0</version>
    </parent>
    <artifactId>logisland-engine-spark_2_common</artifactId>
    <packaging>jar</packaging>


    <properties>
        <swagger-core-version>1.5.16</swagger-core-version>
        <junit-version>4.12</junit-version>
        <scala-maven-plugin-version>3.1.5</scala-maven-plugin-version>
        <scala-test-version>3.0.4</scala-test-version>
        <swagger-async-httpclient-version>0.3.5</swagger-async-httpclient-version>
        <scala.binary.version>2.11</scala.binary.version>
        <spark.version>2.3.3</spark.version>
        <kafka.version>0.10.2.1</kafka.version>
        <scala.version>2.11.8</scala.version>
        <jackson.version>2.6.6</jackson.version>
        <eventhubs.version>2.3.14.1</eventhubs.version>
        <hadoop-azure.version>2.7.0</hadoop-azure.version>
        <hadoop-common.version>2.7.0</hadoop-common.version>
        <elasticsearch.version>7.14.1</elasticsearch.version>
        <spark-avro.version>4.0.0</spark-avro.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.typesafe.scala-logging</groupId>
                <artifactId>scala-logging-slf4j_${scala.binary.version}</artifactId>
                <version>2.1.2</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-compiler</artifactId>
                <version>${scala.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_${scala.binary.version}</artifactId>
                <version>${kafka.version}</version>
                <scope>compile</scope>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <artifactId>com.google.guava</artifactId>
                        <groupId>guava</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-mllib_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-streaming-kafka-0-10_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
                <exclusions>
<!--                    Conflicting with kafka 0.10 and spark 2.4 which use
                   <groupId>org.lz4</groupId>
                    <artifactId>lz4-java</artifactId>
                    -->
                    <exclusion>
                        <groupId>net.jpountz.lz4</groupId>
                        <artifactId>lz4</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql-kafka-0-10_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
            </dependency>

            <dependency> <!-- Embed elasticsearch structured stream sink dependencies -->
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch-spark-20_${scala.binary.version}</artifactId>
                <version>${elasticsearch.version}</version>
                <exclusions> <!-- IMPORTANT : exclude spark dependencies to not collision with the version we use -->
                    <exclusion>
                        <groupId>org.apache.spark</groupId>
                        <artifactId>spark-sql_${scala.binary.version}</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.spark</groupId>
                        <artifactId>spark-streaming_${scala.binary.version}</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.spark</groupId>
                        <artifactId>spark-catalyst_${scala.binary.version}</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.spark</groupId>
                        <artifactId>spark-yarn_${scala.binary.version}</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>com.databricks</groupId><!-- If upgrading spark version, this module has newer versions in org.apache.spark group-->
                <artifactId>spark-avro_${scala.binary.version}</artifactId>
                <version>${spark-avro.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_${scala.binary.version}</artifactId>
                <classifier>test</classifier>
                <version>${kafka.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka-clients</artifactId>
                <version>${kafka.version}</version>
                <classifier>test</classifier>
                <scope>test</scope>
                <exclusions>
                    <!--                    Conflicting with kafka 0.10 and spark 2.4 which use
                                       <groupId>org.lz4</groupId>
                                        <artifactId>lz4-java</artifactId>
                                        -->
                    <exclusion>
                        <groupId>net.jpountz.lz4</groupId>
                        <artifactId>lz4</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest_${scala.binary.version}</artifactId>
                <version>2.2.4</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.hurence.logisland</groupId>
            <artifactId>logisland-api</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.hurence.logisland</groupId>
            <artifactId>logisland-utils</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.hurence.logisland</groupId>
            <artifactId>logisland-plugin-support</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.typesafe.scala-logging</groupId>
            <artifactId>scala-logging-slf4j_${scala.binary.version}</artifactId>
            <version>2.1.2</version>
        </dependency>


        <dependency>
            <groupId>com.groupon.dse</groupId>
            <artifactId>spark-metrics</artifactId>
            <version>2.0.0</version>
        </dependency>

        <!-- spark dependencies -->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.binary.version}</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.binary.version}</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_${scala.binary.version}</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming-kafka-0-10_${scala.binary.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql-kafka-0-10_${scala.binary.version}</artifactId>
        </dependency>

        <dependency> <!-- Embed elasticsearch structured stream sink dependencies -->
            <groupId>org.elasticsearch</groupId>
            <artifactId>elasticsearch-spark-20_${scala.binary.version}</artifactId>
            <version>${elasticsearch.version}</version>
            <exclusions> <!-- IMPORTANT : exclude spark dependencies to not collision with the version we use -->
                <exclusion>
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-sql_${scala.binary.version}</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-streaming_${scala.binary.version}</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-catalyst_${scala.binary.version}</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.spark</groupId>
                    <artifactId>spark-yarn_${scala.binary.version}</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>com.databricks</groupId> <!-- If upgrading spark version, this module has newer versions in org.apache.spark group-->
            <artifactId>spark-avro_${scala.binary.version}</artifactId>
            <version>${spark-avro.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.bahir</groupId>
            <artifactId>spark-sql-streaming-mqtt_${scala.binary.version}</artifactId>
            <version>2.3.2</version>
        </dependency>

        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-api</artifactId>
            <version>${kafka.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-runtime</artifactId>
            <version>${kafka.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.jaxrs</groupId>
                    <artifactId>jackson-jaxrs-json-provider</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>connect-json</artifactId>
            <version>${kafka.version}</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.github.jcustenborder.kafka.connect/kafka-connect-spooldir
        <dependency>
            <groupId>com.github.jcustenborder.kafka.connect</groupId>
            <artifactId>kafka-connect-spooldir</artifactId>
            <version>1.0.13</version>
        </dependency>
        -->

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-core</artifactId>
            <version>${jackson.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <scope>provided</scope>
            <version>${jackson.version}</version>

        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-annotations</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.module</groupId>
            <artifactId>jackson-module-parameter-names</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jdk8</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.datatype</groupId>
            <artifactId>jackson-datatype-jsr310</artifactId>
            <version>${jackson.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
        </dependency>

        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
            <version>5.1.3.Final</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.glassfish/javax.el -->
        <dependency>
            <groupId>org.glassfish</groupId>
            <artifactId>javax.el</artifactId>
            <version>3.0.0</version>
        </dependency>


        <!-- Scala dependencies -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <scope>provided</scope>
        </dependency>


        <!-- test dependencies -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <scope>test</scope>
        </dependency>


        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_2.11</artifactId>
        </dependency>


        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_${scala.binary.version}</artifactId>
            <classifier>test</classifier>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka-clients</artifactId>
            <classifier>test</classifier>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>io.swagger</groupId>
            <artifactId>swagger-core</artifactId>
            <version>${swagger-core-version}</version>
        </dependency>

        <dependency>
            <groupId>com.hurence.logisland</groupId>
            <artifactId>logisland-processor-common</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Lightweight dependencies for http rest connections -->

        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp-urlconnection</artifactId>
            <version>3.10.0</version>
        </dependency>

        <!-- https://mvnrepository.com/artifact/com.squareup.okhttp3/mockwebserver -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>mockwebserver</artifactId>
            <version>3.10.0</version>
            <scope>test</scope>
        </dependency>

        <!-- https://mvnrepository.com/artifact/org.springframework/spring-context-support -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context-support</artifactId>
            <version>5.1.3.RELEASE</version>
        </dependency>

        <!-- Allow to interact with azure eventhub -->
        <dependency>
            <groupId>com.microsoft.azure</groupId>
            <artifactId>azure-eventhubs-spark_${scala.binary.version}</artifactId>
            <version>${eventhubs.version}</version>
        </dependency>

        <dependency>
            <groupId>com.hurence.logisland</groupId>
            <artifactId>logisland-bootstrap</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- hadoop-azure and  hadoop-common allow to interact with azure storage (checkpointing...) -->
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-azure</artifactId>
            <version>${hadoop-azure.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>${hadoop-common.version}</version>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
                <configuration>
                    <!-- Do not truncate exception stack traces -->
                    <trimStackTrace>false</trimStackTrace>
                </configuration>
            </plugin>
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>4.3.1</version>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile-first</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                 <!--   <execution>
                        <id>attach-scaladocs</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>doc-jar</goal>
                        </goals>
                    </execution>-->
                </executions>
                <configuration>
                    <scalaCompatVersion>${scala.binary.version}</scalaCompatVersion>
                    <scalaVersion>${scala.version}</scalaVersion>
                    <recompileMode>incremental</recompileMode>
                    <useZincServer>false</useZincServer>
                    <args>
                        <arg>-unchecked</arg>
                        <arg>-deprecation</arg>
                        <!--Without bumping the max file name size I was having issues at compilation time for some classes with a long name -->
                        <arg>-Xmax-classfile-name</arg>
                        <arg>140</arg>
                    </args>
                    <jvmArgs>
                        <jvmArg>-Xms64m</jvmArg>
                        <jvmArg>-Xms1024m</jvmArg>
                        <jvmArg>-Xmx1024m</jvmArg>
                        <jvmArg>-XX:PermSize=${PermGen}</jvmArg>
                        <jvmArg>-XX:MaxPermSize=${MaxPermGen}</jvmArg>
                    </jvmArgs>
                    <javacArgs>
                        <javacArg>-source</javacArg>
                        <javacArg>${maven.compiler.source}</javacArg>
                        <javacArg>-target</javacArg>
                        <javacArg>${maven.compiler.source}</javacArg>
                    </javacArgs>
                </configuration>
            </plugin>
            
        </plugins>

    </build>


</project>
